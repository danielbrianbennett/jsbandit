%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\dbennett1\Google Drive\Works in Progress\JSBANDIT\Bandit\data\datadump\datastore_backup_datastore_backup_2017_01_23_DataObject_156947388519338006714114CD2CB1E_output-1.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/02/08 15:53:45

%% Initialize variables.
delimiter = '';
legitChar = {' ','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','1','2','3','4','5','6','7','8','9','0',':',',','.','"','[',']','T','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};
formatSpec = '%q%[^\n\r]';
outCounter = 0;
regExpStr = '\{([^]+)\}';

%% Set filenames
filenames = {...
    'C:\Users\dbennett1\Documents\MATLAB\jsonlab-1.5\datastore_backup_datastore_backup_2017_02_15_DataObject%2F15692737995616933046122F834963%2Foutput-0.txt';
    'C:\Users\dbennett1\Documents\MATLAB\jsonlab-1.5\datastore_backup_datastore_backup_2017_02_15_DataObject%2F15692737995616933046122F834963%2Foutput-1.txt';
};

for fileIndex = 1:numel(filenames)
    
    filename = filenames{fileIndex};
    %% Open, read, and close the text file.
    fileID = fopen(filename,'r');
    dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter,  'ReturnOnError', false);
    fclose(fileID);

    %% Allocate imported array to column variable names
    var = dataArray{:, 1};

    %% Clear temporary variables
    clearvars filename fileID dataArray ans raw col numericData rawCellColumns rawNumericColumns R;

    %% extract data from json format

    inCounter = 0;

    for i = 1:numel(var)

        temp = regexp(var{i},regExpStr,'tokens'); 
        if ~isempty(temp)
            inCounter = inCounter + 1;
            badCharLoc = find(~ismember(temp{1}{1}(:),legitChar));
            diffLoc = badCharLoc(find(diff(badCharLoc) == 1) + 1);
            if isempty(diffLoc)
                container{inCounter} = temp{1};
            else
                temp{1}{1}(max(diffLoc)-6:max(diffLoc)) = []; %bad interjections seem always to be 7 characters long
                container{inCounter} = temp{1};
            end
        end

    end

    badCounter = 0;
    badLoc = [];
    for ii = 1:numel(container)

        fprintf('%.0f of %.0f\n', ii ,numel(container))
        try
            if ~strcmp(container{ii}{1}(1),'"')
                container{ii}{1} = ['"'  container{ii}{1}];
            end
            temp = loadjson(['{' container{ii}{1} '}']);
            data(outCounter) = temp;
        catch 
            badCounter = badCounter + 1;
            badLoc = [badLoc outCounter];
            other{badCounter} = temp;
        end
        outCounter = outCounter + 1;
    end

end